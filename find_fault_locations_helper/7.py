import os

# Input and output files
input_file = "bash_script_results/extracted_faulted_results.txt"
output_file = "bash_script_results/useful_addresses.txt"

# Hardcoded list of correct lengths
correct_lengths = [
    "[7, 1, 11, 4, 9, 5, 15, 12, 5, 14, 1, 4, 8, 10, 1, 10, 2, 12, 15, 4, 1, 3, 6, 7, 6, 10, 4, 9, 14, 2, 5, 0, 1, 2, 3, 10, 12, 6, 14, 10, 1, 1, 14, 4, 12, 8, 1, 12, 6, 11, 3, 4, 3, 10, 0, 14, 7, 13, 14, 12, 7, 1, 8, 10, 1, 15, 13 ]",
    "[6, 12, 2, 13, 9, 3, 3, 5, 0, 0, 0, 15, 0, 7, 1, 11, 8, 7, 1, 5, 12, 12, 5, 7, 10, 6, 9, 11, 8, 1, 8, 11, 14, 2, 8, 6, 6, 6, 8, 13, 9, 14, 1, 2, 5, 8, 11, 12, 11, 12, 5, 14, 14, 3, 2, 11, 3, 12, 9, 10, 10, 8, 8, 10, 1, 14, 5 ]",
    "[6, 12, 0, 2, 3, 7, 5, 14, 2, 13, 14, 1, 11, 1, 8, 8, 1, 4, 14, 14, 13, 2, 10, 2, 6, 3, 5, 1, 8, 15, 15, 13, 5, 6, 13, 10, 5, 0, 4, 4, 8, 15, 8, 2, 14, 6, 15, 3, 12, 15, 0, 4, 7, 11, 1, 7, 13, 2, 9, 3, 13, 13, 12, 14, 1, 13, 9 ]",
    "[8, 1, 15, 14, 15, 15, 0, 5, 0, 2, 5, 12, 8, 11, 13, 4, 8, 13, 10, 11, 10, 11, 2, 10, 5, 13, 9, 1, 9, 4, 7, 1, 4, 15, 10, 13, 10, 14, 1, 13, 0, 4, 9, 13, 14, 14, 14, 0, 14, 7, 6, 8, 2, 6, 12, 0, 13, 5, 1, 5, 13, 5, 6, 14, 1, 11, 11 ]"
    "[6, 6, 5, 11, 10, 7, 10, 2, 9, 13, 11, 4, 9, 0, 7, 3, 12, 2, 10, 3, 4, 9, 0, 8, 13, 9, 8, 12, 0, 15, 15, 11, 6, 6, 9, 9, 3, 11, 5, 14, 11, 1, 11, 4, 12, 0, 8, 1, 7, 13, 12, 0, 10, 15, 12, 14, 6, 15, 6, 1, 10, 5, 15, 13, 1, 12, 3 ]"
    "[11, 9, 10, 5, 14, 13, 10, 6, 2, 3, 12, 14, 14, 4, 6, 8, 6, 12, 2, 2, 14, 0, 2, 10, 10, 12, 13, 6, 9, 8, 14, 12, 13, 14, 7, 1, 13, 3, 7, 2, 14, 1, 13, 12, 3, 1, 14, 0, 6, 5, 14, 5, 3, 6, 0, 11, 6, 2, 3, 13, 7, 14, 9, 15, 1, 12, 2 ]"
    "[13, 4, 2, 0, 3, 5, 3, 6, 10, 12, 0, 5, 12, 9, 15, 8, 6, 14, 7, 12, 3, 4, 8, 0, 12, 8, 10, 10, 5, 7, 2, 3, 3, 3, 13, 12, 4, 0, 3, 3, 4, 7, 11, 0, 12, 6, 7, 6, 6, 15, 1, 14, 3, 8, 8, 2, 8, 15, 0, 8, 1, 15, 2, 11, 2, 1, 3 ]"
    "[6, 15, 14, 8, 11, 6, 10, 12, 10, 10, 13, 13, 6, 7, 1, 6, 13, 9, 15, 15, 13, 10, 7, 7, 3, 10, 4, 0, 8, 8, 7, 3, 7, 13, 5, 1, 4, 12, 0, 11, 7, 13, 9, 11, 14, 14, 3, 6, 4, 10, 2, 6, 13, 8, 8, 10, 0, 8, 3, 4, 5, 14, 5, 11, 1, 11, 7 ]"
    "[2, 15, 0, 7, 13, 9, 8, 5, 7, 15, 15, 3, 15, 10, 9, 7, 0, 4, 4, 4, 7, 13, 13, 8, 12, 15, 0, 11, 5, 9, 12, 4, 8, 8, 5, 5, 4, 13, 13, 5, 7, 4, 10, 4, 0, 14, 10, 9, 15, 11, 6, 8, 11, 2, 11, 0, 15, 5, 5, 1, 0, 1, 10, 11, 1, 13, 4 ]"
    "[8, 8, 0, 5, 3, 13, 13, 14, 13, 9, 1, 4, 3, 11, 9, 10, 15, 5, 15, 2, 11, 10, 2, 0, 14, 4, 3, 0, 2, 11, 6, 5, 7, 4, 9, 5, 13, 9, 14, 0, 5, 0, 6, 2, 9, 1, 7, 2, 15, 10, 2, 12, 12, 10, 4, 9, 9, 8, 0, 12, 12, 3, 15, 9, 1, 15, 0 ]"
    "[1, 14, 11, 5, 10, 9, 4, 13, 3, 11, 15, 15, 3, 10, 0, 7, 6, 9, 14, 14, 5, 5, 0, 10, 12, 2, 10, 8, 13, 15, 9, 3, 9, 7, 7, 8, 8, 1, 7, 9, 11, 8, 15, 10, 4, 1, 14, 3, 15, 3, 5, 10, 1, 6, 10, 8, 15, 3, 6, 8, 15, 12, 9, 12, 1, 11, 2 ]"
    "[3, 7, 2, 12, 7, 1, 9, 11, 11, 2, 6, 14, 2, 8, 7, 2, 5, 13, 8, 15, 10, 4, 13, 3, 2, 4, 5, 4, 14, 9, 4, 15, 2, 9, 15, 14, 13, 1, 10, 6, 15, 12, 1, 0, 4, 6, 4, 9, 14, 3, 13, 4, 8, 6, 11, 4, 3, 14, 11, 6, 0, 12, 9, 10, 1, 13, 15 ]"
    "[13, 10, 0, 0, 5, 0, 8, 12, 9, 0, 8, 3, 8, 1, 14, 15, 10, 0, 3, 1, 2, 10, 1, 8, 1, 6, 12, 13, 13, 9, 7, 6, 9, 8, 15, 8, 12, 2, 2, 15, 6, 12, 15, 14, 7, 12, 1, 9, 6, 7, 11, 14, 10, 0, 10, 10, 6, 4, 13, 5, 15, 9, 2, 3, 1, 14, 0 ]"
    "[9, 10, 0, 1, 8, 7, 1, 11, 6, 8, 11, 7, 7, 0, 11, 15, 6, 14, 12, 0, 4, 12, 1, 7, 13, 11, 1, 6, 2, 15, 0, 7, 14, 10, 7, 4, 4, 12, 9, 13, 1, 8, 11, 5, 11, 0, 7, 11, 10, 12, 14, 4, 8, 7, 0, 3, 4, 12, 12, 14, 4, 7, 13, 12, 1, 13, 10 ]"
    "[1, 14, 9, 14, 6, 5, 3, 4, 7, 4, 12, 0, 15, 15, 12, 8, 14, 1, 3, 12, 11, 12, 1, 11, 3, 12, 15, 7, 10, 11, 14, 13, 2, 6, 0, 4, 0, 9, 3, 3, 0, 6, 15, 13, 7, 12, 5, 4, 2, 1, 3, 13, 2, 9, 7, 1, 0, 6, 11, 9, 6, 6, 11, 12, 1, 14, 13 ]"
    "[10, 10, 3, 11, 2, 10, 10, 0, 13, 2, 5, 15, 15, 10, 10, 8, 6, 12, 13, 9, 10, 3, 0, 3, 6, 5, 10, 13, 7, 5, 7, 9, 8, 12, 1, 7, 11, 4, 9, 3, 3, 1, 10, 1, 9, 9, 14, 6, 10, 13, 14, 0, 8, 5, 15, 12, 10, 10, 8, 9, 12, 10, 14, 1, 1, 12, 1 ]"
    "[50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50 ]"
]

# Read all lines from input file
if not os.path.isfile(input_file):
    print(f"Error: {input_file} not found.")
    exit(1)

with open(input_file, "r") as infile:
    lines = infile.readlines()

# Clear output file
open(output_file, "w").close()

total_lines = len(lines)

# Iterate through all lines
for i, line in enumerate(lines):
    if line.startswith("lengths = "):
        found = any(valid in line for valid in correct_lengths)
        if not found and i >= 7:
            # Write the line 7 lines above the current "lengths = ..." line
            with open(output_file, "a") as outfile:
                # outfile.write(lines[i - 7])
                outfile.write(lines[i - 7])

print(f"Processing complete. Results saved to {output_file}.")
